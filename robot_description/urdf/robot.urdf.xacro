<?xml version="1.0" ?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="carlos">

   <xacro:property name="body_x" value="0.6" />
   <xacro:property name="body_y" value="0.4" />
   <xacro:property name="body_z" value="0.4" />
   <xacro:property name="body_m" value="0.2" />

   <xacro:property name="wheel_len" value="0.08" />
   <xacro:property name="wheel_rad" value="0.18" />
   <xacro:property name="wheel_m" value="0.1" />

   <xacro:property name="wheel_front_rad" value="0.08" />
   <xacro:property name="wheel_front_m" value="0.1" />

   <xacro:property name="cam_rad" value="0.04" />
   <xacro:property name="cam_m" value="0.01" />

   <xacro:property name="lidar_len" value="0.08" />
   <xacro:property name="lidar_rad" value="0.06" />
   <xacro:property name="lidar_m" value="0.05" />

    <!-- Define intertial property macros  -->
   <xacro:macro name="box_inertia" params="m w h d">
     <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0"
              iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) *
(w*w + h*h)}" />
   </xacro:macro>

   <xacro:macro name="cylinder_inertia" params="m r h">
     <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0" ixz="0"
              iyy="${(m/12) * (3*r*r + h*h)}" iyz="0" izz="${(m/2) *
(r*r)}" />
   </xacro:macro>

   <xacro:macro name="sphere_inertia" params="m r">
     <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0"
              iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m *
(r*r)}" />
   </xacro:macro>

   <material name="blue">
     <color rgba="0 0 0.8 1"/>
   </material>

   <material name="red">
     <color rgba="0.8 0 0 1"/>
   </material>

   <material name="grey">
     <color rgba="0.36 0.36 0.36 1"/>
   </material>

   <material name="lightgrey">
     <color rgba="0.76 0.76 0.76 1"/>
   </material>

   <material name="white">
     <color rgba="1 1 1 1"/>
   </material>

   <link name="base_link">
     <visual>
       <geometry>
         <box size="${body_x} ${body_y} ${body_z}"/>
       </geometry>
       <material name="white"/>
     </visual>

     <collision>
       <geometry>
         <box size="${body_x} ${body_y} ${body_z}"/>
       </geometry>
     </collision>

     <inertial>
       <origin rpy="0 0 0" xyz="0 0 0.0"/>
       <mass value="${body_m}"/>
       <xacro:box_inertia m="${body_m}" w="${body_y}" h="${body_z}"
d="${body_x}"/>
     </inertial>
   </link>

   <gazebo reference="base_link">
     <material>Gazebo/White</material>
   </gazebo>

   <link name="wheel_right">
     <visual>
       <geometry>
         <cylinder length="${wheel_len}" radius="${wheel_rad}"/>
       </geometry>
       <material name="lightgrey"/>
     </visual>

     <collision>
       <geometry>
         <cylinder length="${wheel_len}" radius="${wheel_rad}"/>
       </geometry>
     </collision>

     <inertial>
       <mass value="${wheel_m}"/>
       <xacro:cylinder_inertia m="${wheel_m}" r="${wheel_rad}"
h="${wheel_len}"/>
     </inertial>
   </link>

   <gazebo reference="wheel_right">
     <mu1>1.2</mu1>
     <mu2>1.2</mu2>
     <kp>500000.0</kp>
     <kd>10.0</kd>
     <minDepth>0.001</minDepth>
     <maxVel>0.1</maxVel>
     <material>Gazebo/GreyGradientSky</material>
   </gazebo>

   <joint name="wheel_right_joint" type="continuous">
     <parent link="base_link"/>
     <child link="wheel_right"/>
     <axis xyz="0 0 1"/>
     <origin rpy="${-pi/2} 0 0" xyz="${body_x*0.2} ${-body_y*0.65}
${-body_y*0.25}"/>
   </joint>

   <link name="wheel_left">
     <visual>
       <geometry>
         <cylinder length="${wheel_len}" radius="${wheel_rad}"/>
       </geometry>
       <material name="lightgrey"/>
     </visual>

     <collision>
       <geometry>
         <cylinder length="${wheel_len}" radius="${wheel_rad}"/>
       </geometry>
     </collision>

     <inertial>
       <mass value="${wheel_m}"/>
       <xacro:cylinder_inertia m="${wheel_m}" r="${wheel_rad}"
h="${wheel_len}"/>
     </inertial>
   </link>

   <gazebo reference="wheel_left">
     <mu1>1.2</mu1>
     <mu2>1.2</mu2>
     <kp>500000.0</kp>
     <kd>10.0</kd>
     <minDepth>0.001</minDepth>
     <maxVel>0.1</maxVel>
     <material>Gazebo/GreyGradientSky</material>
   </gazebo>

   <joint name="wheel_left_joint" type="continuous">
     <parent link="base_link"/>
     <child link="wheel_left"/>
     <axis xyz="0 0 1"/>
     <origin rpy="${-pi/2} 0 0" xyz="${body_x*0.2} ${body_y*0.65}
${-body_y*0.25}"/>
   </joint>

   <link name="lidar">
     <visual>
       <geometry>
         <cylinder length="${lidar_len}" radius="${lidar_rad}"/>
       </geometry>
       <material name="blue"/>
     </visual>

     <inertial>
       <mass value="${lidar_m}"/>
       <xacro:cylinder_inertia m="${lidar_m}" r="${lidar_rad}"
h="${lidar_len}"/>
     </inertial>
   </link>

   <gazebo reference="lidar">
     <material>Gazebo/SkyBlue</material>

     <!-- ray sensor -->
     <sensor name="lidar_sensor" type="ray">
       <ray>
         <scan>
           <horizontal>
             <samples>360</samples>
             <resolution>1</resolution>
             <min_angle>0</min_angle>
             <max_angle>6.28318530717958</max_angle>
           </horizontal>
           <vertical>
             <samples>1</samples>
             <resolution>1</resolution>
             <min_angle>-0.0087</min_angle>
             <max_angle>0.0087</max_angle>
           </vertical>
         </scan>
         <range>
           <min>0.1</min>
           <max>10.0</max>
         </range>
       </ray>

       <always_on>true</always_on>
       <update_rate>10.0</update_rate>
       <visualize>true</visualize>

       <plugin filename="libgazebo_ros_ray_sensor.so" name="laserscan">
         <ros>
           <namespace>/ray</namespace>
           <remapping>~/out:=laserscan</remapping>
         </ros>
         <output_type>sensor_msgs/LaserScan</output_type>
         <frame_name>lidar</frame_name>
       </plugin>
     </sensor>
   </gazebo>

   <joint name="lidar_joint" type="fixed">
     <parent link="base_link"/>
     <child link="lidar"/>
     <origin rpy="0 0 0" xyz="${-body_x*0.3} 0.0 ${body_z*0.75}"/>
   </joint>

   <link name="wheel_front">
     <visual>
       <geometry>
         <sphere radius="${wheel_front_rad}"/>
       </geometry>
       <material name="grey"/>
     </visual>
     <collision>
       <geometry>
         <sphere radius="${wheel_front_rad}"/>
       </geometry>
     </collision>

   </link>

   <joint name="wheel_front_joint" type="fixed">
     <parent link="base_link"/>
     <child link="wheel_front"/>
     <origin rpy="0 0 0" xyz="${-body_x*0.325} 0.0 ${-body_z*0.5}"/>
   </joint>

   <gazebo reference="wheel_front">
     <material>Gazebo/DarkGray</material>
     <mu1>0.2</mu1>
     <mu2>0.2</mu2>
   </gazebo>

   <gazebo>
     <plugin filename="libgazebo_ros_diff_drive.so" name="diff_drive">
       <!-- wheels -->
       <left_joint>wheel_left_joint</left_joint>
       <right_joint>wheel_right_joint</right_joint>
       <!-- kinematics -->
       <wheel_separation>${wheel_len + body_y}</wheel_separation>
       <wheel_diameter>${2*wheel_rad}</wheel_diameter>
       <!-- limits -->
       <max_wheel_torque>20</max_wheel_torque>
<max_wheel_acceleration>1.0</max_wheel_acceleration>
       <!-- output -->
       <publish_odom>true</publish_odom>
       <publish_odom_tf>true</publish_odom_tf>
       <publish_wheel_tf>true</publish_wheel_tf>
       <robot_base_frame>base_link</robot_base_frame>
     </plugin>
   </gazebo>

   <link name="camera">
     <visual>
       <geometry>
         <sphere radius="${cam_rad}"/>
       </geometry>
       <material name="blue"/>
     </visual>
   </link>

   <gazebo reference="camera">
     <material>Gazebo/SkyBlue</material>
   </gazebo>
   &gt;

   <joint name="camera_joint" type="fixed">
     <parent link="base_link"/>
     <child link="camera"/>
     <origin rpy="0 0 0" xyz="${body_x*0.55} 0 0"/>
   </joint>

   <gazebo reference="camera">
     <sensor name="front_camera" type="camera">
       <always_on>true</always_on>
       <update_rate>30.0</update_rate>
       <visualize>true</visualize>

       <camera name="front_camera">
         <horizontal_fov>1.46608</horizontal_fov>

         <image>
           <width>640</width>
           <height>480</height>
           <format>R8G8B8</format>
         </image>

         <distortion>
           <k1>0.0</k1>
           <k2>0.0</k2>
           <k3>0.0</k3>
           <p1>0.0</p1>
           <p2>0.0</p2>
           <center>0.5 0.5</center>
         </distortion>
       </camera>

       <plugin filename="libgazebo_ros_camera.so" name="plugin_camera">
         <ros>
           <namespace>/cam</namespace>
           <remapping>~/image_raw:=image_raw</remapping>
<remapping>~/camera_info:=camera_info</remapping>
         </ros>

         <camera_name>front_camera</camera_name>
         <frame_name>camera</frame_name>
         <hack_baseline>0.2</hack_baseline>
       </plugin>
     </sensor>

     <material>Gazebo/Green</material>

   </gazebo>

</robot>